




















#pragma GCC diagnostic ignored "-Wmultichar"






#pragma GCC diagnostic ignored "-Wcomment"



// -- C++ comment

extern char s5[];
extern int d0;
extern int id\u0165ntifier;
extern int \U000AFFF0;
extern int \u1234;
extern char *c9;
extern char *c8;
extern int c7;
extern char s4[];
extern int c6;
extern int c5;
extern int c4;
extern char s3[];
extern int i1[];
extern char c3[];
extern char c2[];
extern char c1;
extern int value2;
extern int value1;















  int   value1 = 0;


// A C++ comment with a C-style comment marker

  in the middle

char c1 = 'q';
char c2[] = { '\0', '\\', '\'', '\\
n', '\n', };

char c3[] = { '\n', '\
\n', };

int i1[] = { '/*', '*/', '//' };

char s3[] =
{
" */ /* SCC has been trained to know about strings /* */ */"
"\"Double quotes embedded in strings, \\\" too\'!"
"And \
newlines in them"
"/* This is not a comment */"
"// This is not a comment either"
};
int c4 = '/*' ; // No comment there
int c5 = '//' ; // No comment there
int c6 = '*/' ; // No end comment there

char s4[] = "And escaped double quotes at the end of a string\"";

int c7 = '\\
n' ; // OK
char *c8 = "\"";
char *c9 = "\
\n";

// C++/C99 comment with \
continuation character \
on three source lines (this should not be seen with the -C flag)

/\
/\
C++/C99 comment (this should not be seen unless you use -S c89)








/\
\
\
/ But this is a C++/C99 comment!
















int \u1234 = 0;
int \U000EFFF0 = 0; // OK
// See: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3146.html
//int \U0010FFF0 = 0; // Not OK - in a PUA
int id\u0165ntifier = 0;
int d0 = '\u0165';
char s5[] = "char\u0161cter\
 string";

